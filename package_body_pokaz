create or replace package body pokaz
is
--pomoc w korzystaniu z paczki pokaz
  procedure pomoc
  is
  begin
    tekst('Witamy w pomocy dla paczki pokaz jeśli chcesz pokazać');
    tekst('-recepture pokaz.receptura(nazwa dania)');
    tekst('-stan magazynowy pokaz.magazyn');
    tekst('-koszt produkcji pokaz.koszt(nazwa dania)');
    tekst('-wartość adekwatna dania pokaz.wartosc(nazwa dania)');
    tekst('-przewidywane zejście dań pokaz.zejscie_dan');
    tekst('-listę zakupów pokaz.lista_zakupow');
  end pomoc;
  
  procedure receptura (in_dish varchar2)
  is
    type nt_recipes is table of recipes_v %rowtype;
    kol_nt nt_recipes := nt_recipes();
  begin
    select *
    bulk collect into kol_nt
    from recipes_v
    where dish_name = in_dish;

      tekst('Receptura na '||in_dish);
    for i in kol_nt.first..kol_nt.last
    loop
      tekst(kol_nt(i).product_name||' '||to_char(kol_nt(i).quantity, '990.9')||kol_nt(i).unit_code);
    end loop;
  end receptura;
  
  procedure magazyn
  is
    type kol_nt is table of warehouse_v%rowtype;
    nt_warehouse kol_nt := kol_nt();
  begin
    select *
    bulk collect into nt_warehouse
    from warehouse_v;
  
    for i in nt_warehouse.first..nt_warehouse.last
    loop
      if nt_warehouse(i).unit_code in ('g', 'ml') then
        nt_warehouse(i).quantity := nt_warehouse(i).quantity / 1000;
      end if;
    
      if nt_warehouse(i).unit_code in ('g') then
        nt_warehouse(i).unit_code := 'kg';
      elsif nt_warehouse(i).unit_code in ('ml') then
        nt_warehouse(i).unit_code := 'l';
      end if;
    
      tekst(nt_warehouse(i).product_name||' '||nt_warehouse(i).quantity||nt_warehouse(i).unit_code);
    end loop;
  end magazyn;
  
  function f_menu_id (in_dish_name menu.dish_name%type) return number
  is
    v_menu_id menu.menu_id%type;
  begin
    select menu_id
    into v_menu_id
    from menu
    where dish_name = in_dish_name;

    return v_menu_id;
  end f_menu_id;
  
--procedura wypiczająca koszt produkcji wybranego dania na podstawie średniej ceny zakupionego towaru
  procedure koszt (in_dish varchar2)
  is
    type rt_type is record (prod_id number,
                            quan number);
    type kol_nt is table of rt_type;
    nt_recipes kol_nt := kol_nt();
    v_prod_price number;
    v_suma number := 0;
    v_menu_id number;
  begin
    v_menu_id := f_menu_id(in_dish);

    select product_id, quantity
    bulk collect into nt_recipes
    from recipes
    where menu_id = v_menu_id;
  
    for i in nt_recipes.first..nt_recipes.last
    loop
      select avg(product_price/quantity)
      into v_prod_price
      from delivery
      where product_id = nt_recipes(i).prod_id;
    
      v_suma := v_suma + (v_prod_price * nt_recipes(i).quan);
    end loop;
  
    tekst('Koszt produkcji '||in_dish||' to '||v_suma||'zł');
  end koszt;
    
  procedure koszt (in_dish varchar2,
                    out_suma out number)
  is
    type rt_type is record (prod_id number,
                            quan number);
    type kol_nt is table of rt_type;
    nt_recipes kol_nt := kol_nt();
    v_prod_price number;
    v_suma number := 0;
    v_menu_id number;
  begin
    v_menu_id := f_menu_id(in_dish);

    select product_id, quantity
    bulk collect into nt_recipes
    from recipes
    where menu_id = v_menu_id;
  
    for i in nt_recipes.first..nt_recipes.last
    loop
      select avg(product_price/quantity)
      into v_prod_price
      from delivery
      where product_id = nt_recipes(i).prod_id;
    
      v_suma := v_suma + (v_prod_price * nt_recipes(i).quan);
    end loop;
      out_suma := v_suma;
    tekst('Koszt produkcji '||in_dish||' to '||round(v_suma,2)||'zł');
  end koszt;
  
--procedura licząca cenę jaką powinny kosztować dania jeśli koszt ich wyprodukowania to 30% wartości + vat
  procedure wartosc (in_dish varchar2)
  is
    v_suma number;
    v_vat number;
  begin
    select vat
    into v_vat
    from menu
    where dish_name = in_dish;
  
    v_vat := 1 + (v_vat/100);

    koszt(in_dish, v_suma);
  
    v_suma := v_suma *3.35 * v_vat;
    tekst('Cena '||in_dish||' powinna wynosić '||round(v_suma));
  end wartosc;
  
--procedura pokazująca szacunkowe zejście towaru i dań z niego wyprodukowanych na podstawie średniej z 7 dni pomnożonej przez 2
  procedure zejscie_dan
  is
    type rt_type is record (p_name varchar2(50),
                            quan number,
                            unit varchar2(3));
    type kol_nt is table of rt_type;
    nt_prod kol_nt := kol_nt();
  
    type rt_type_2 is record (d_name varchar2(50),
                              quan number);
    type kol_nt_2 is table of rt_type_2;
    nt_dish kol_nt_2 := kol_nt_2();
  begin
    select p.product_name, round(sum(w.quantity * r.quantity)/7), r.unit_code
    bulk collect into nt_prod
    from workplace_production w
    join recipes r on w.menu_id = r.menu_id
    join products p on r.product_id = p.product_id
    where w.date_work >  sysdate - 7
    group by p.product_name, r.unit_code;
  
    select m.dish_name, round(sum(w.quantity)/3.5)
    bulk collect into nt_dish
    from workplace_production w
    join menu m on w.menu_id = m.menu_id
    where date_work > sysdate - 7
    group by m.dish_name;
  
    tekst('Na dzisiejszy dzień powinieneś mieć towar w ilości:');
  
    for i in nt_prod.first..nt_prod.last
    loop
      if nt_prod(i).quan * 2 > 1000 then
        nt_prod(i).quan := nt_prod(i).quan/1000;
          if nt_prod(i).unit in ('g') then
            nt_prod(i).unit := 'kg';
          elsif nt_prod(i).unit in ('ml') then
            nt_prod(i).unit := 'l';
          end if;
      end if;
    
      tekst(nt_prod(i).p_name||' '||nt_prod(i).quan * 2||nt_prod(i).unit);
    end loop;
  
    tekst(' ');
    tekst('Przygotuj się na wydanie dań w ilości');
  
    for i in nt_dish.first..nt_dish.last
    loop
      tekst(nt_dish(i).d_name||' '||nt_dish(i).quan||'szt.');
    end loop;
  end zejscie_dan;
  
--procedura pokazująca listę brakującego towaru który jest wyliczany na podstawie średniego zejścia przez ostatnie 7 dni i pomnożonego przez 3,5 w celu zagwarantowania zapasu
  procedure lista_zakupow
  is
    type rt_type is record (p_name varchar2(50),
                            quan number,
                            unit varchar2(3));
    type kol_nt is table of rt_type;
   nt_prod kol_nt := kol_nt();
  begin
    select p.product_name, w.quantity - sum(wp.quantity * r.quantity)/2, r.unit_code
    bulk collect into nt_prod
    from workplace_production wp
    join recipes r on wp.menu_id = r.menu_id
    join products p on r.product_id = p.product_id
    join warehouse w on r.product_id = w.product_id
    where wp.date_work >  sysdate - 7
    group by p.product_name, w.quantity, r.unit_code;
  
    tekst('Zamów na jutro towar:');
    for i in nt_prod.first..nt_prod.last
    loop
      if nt_prod(i).quan < 0 then
        if nt_prod(i).quan < -1000 then
          nt_prod(i).quan := nt_prod(i).quan / 1000;
        end if;
          if nt_prod(i).unit in ('g') then
            nt_prod(i).unit := 'kg';
          elsif nt_prod(i).unit in ('ml') then
            nt_prod(i).unit := 'l';
          end if;
        tekst(nt_prod(i).p_name||' '||abs(nt_prod(i).quan)||nt_prod(i).unit);
      end if;
    end loop;
  end lista_zakupow;
  
--procedura mająca pokazać utarg w ciągu wybranej ilości dni
  procedure utarg(in_ile_dni number)
  is
    v_profit number;
    v_czas varchar2(30);
  begin
    if in_ile_dni = 1 then
      v_czas := 'dzisiejszego dnia';
    elsif in_ile_dni > 1 then
      v_czas := 'ostatnich '||in_ile_dni||' dni';
    end if;

    select sum(profit)
    into v_profit
    from waiters
    where date_work > sysdate - in_ile_dni;
  
    tekst('Utarg z '||v_czas||' to '||v_profit||'zł');
  end utarg;
end;
